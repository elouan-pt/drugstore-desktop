/*
 * Copyright (c) 2015 Pastor Tantalean.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Pastor Tantalean - initial API and implementation and/or initial documentation
 */
package view;

import controller.EmployeeDAO;
import controller.EmployeePermissionDetailDAO;
import controller.UserDAO;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.AbstractDocument;
import model.Employee;
import model.EmployeePermissionDetail;
import model.Permission;
import model.User;
import util.ImageLoader;
import util.IntegerDocumentFilter;
import util.PasswordHash;
import util.Validation;

/**
 *
 * @author Pastor Tantalean
 */
public class NewUserPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewUserPanel
     */
    Boolean[] correct = {false, false, false, false, false, true, true, true};

    public NewUserPanel() {
        initComponents();
        validateAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        confirmPasswordLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        phoneNumberLabel = new javax.swing.JLabel();
        ageLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JPasswordField();
        confirmPasswordTextField = new javax.swing.JPasswordField();
        firstNameTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        emailTextField = new javax.swing.JTextField();
        phoneNumberTextField = new javax.swing.JTextField();
        ((AbstractDocument) phoneNumberTextField.getDocument()).setDocumentFilter(
            new IntegerDocumentFilter());
        ageSpinner = new javax.swing.JSpinner();
        checkUsernameLabel = new javax.swing.JLabel();
        checkPasswordLabel = new javax.swing.JLabel();
        checkConfirmPasswordLabel = new javax.swing.JLabel();
        checkFirstNameLabel = new javax.swing.JLabel();
        checkLastNameLabel = new javax.swing.JLabel();
        checkEmailLabel = new javax.swing.JLabel();
        checkPhoneNumberLabel = new javax.swing.JLabel();
        checkAgeLabel = new javax.swing.JLabel();
        downPanel = new javax.swing.JPanel();
        accessLabel = new javax.swing.JLabel();
        warehouseCheckBox = new javax.swing.JCheckBox();
        saleCheckBox = new javax.swing.JCheckBox();
        reportsCheckBox = new javax.swing.JCheckBox();
        usersCheckBox = new javax.swing.JCheckBox();
        addUserButton = new javax.swing.JButton();
        topDownSeparator = new javax.swing.JSeparator();

        usernameLabel.setText("Usuario:");

        passwordLabel.setText("Contraseña:");

        confirmPasswordLabel.setText("Confirmar Contraseña:");

        firstNameLabel.setText("Nombres:");

        lastNameLabel.setText("Apellidos:");

        emailLabel.setText("Correo electrónico:");

        phoneNumberLabel.setText("Nº Telefónico:");

        ageLabel.setText("Edad:");

        usernameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameTextFieldFocusLost(evt);
            }
        });

        passwordTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordTextFieldFocusLost(evt);
            }
        });

        confirmPasswordTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                confirmPasswordTextFieldFocusLost(evt);
            }
        });

        firstNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstNameTextFieldFocusLost(evt);
            }
        });

        lastNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lastNameTextFieldFocusLost(evt);
            }
        });

        emailTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailTextFieldFocusLost(evt);
            }
        });

        phoneNumberTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                phoneNumberTextFieldFocusLost(evt);
            }
        });

        ageSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 150, 1));
        ageSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ageSpinnerFocusLost(evt);
            }
        });

        checkUsernameLabel.setToolTipText("");

        checkPasswordLabel.setToolTipText("");

        checkConfirmPasswordLabel.setToolTipText("");

        checkFirstNameLabel.setToolTipText("");

        checkLastNameLabel.setToolTipText("");

        checkEmailLabel.setToolTipText("");

        checkPhoneNumberLabel.setToolTipText("");

        checkAgeLabel.setToolTipText("");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(usernameLabel)
                .addGap(83, 83, 83)
                .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(checkUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(passwordLabel)
                .addGap(63, 63, 63)
                .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(checkPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addComponent(ageLabel)
                        .addGap(94, 94, 94)
                        .addComponent(ageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(184, 184, 184)
                        .addComponent(checkAgeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addComponent(phoneNumberLabel)
                        .addGap(54, 54, 54)
                        .addComponent(phoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(checkPhoneNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addComponent(emailLabel)
                        .addGap(30, 30, 30)
                        .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(checkEmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addComponent(lastNameLabel)
                        .addGap(76, 76, 76)
                        .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(checkLastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addComponent(firstNameLabel)
                        .addGap(76, 76, 76)
                        .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(checkFirstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addComponent(confirmPasswordLabel)
                        .addGap(12, 12, 12)
                        .addComponent(confirmPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(checkConfirmPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkUsernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(passwordLabel))
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(confirmPasswordLabel))
                    .addComponent(confirmPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkConfirmPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkFirstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkLastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, topPanelLayout.createSequentialGroup()
                        .addComponent(lastNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(emailLabel))
                    .addComponent(checkEmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkPhoneNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(phoneNumberLabel)))
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkAgeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(topPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ageLabel))))
        );

        accessLabel.setText("ACCESOS");

        warehouseCheckBox.setText("Almacén");

        saleCheckBox.setText("Ventas");

        reportsCheckBox.setText("Reportes");

        usersCheckBox.setText("Usuarios");

        addUserButton.setText("AGREGAR");
        addUserButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addUserButtonMouseClicked(evt);
            }
        });
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout downPanelLayout = new javax.swing.GroupLayout(downPanel);
        downPanel.setLayout(downPanelLayout);
        downPanelLayout.setHorizontalGroup(
            downPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downPanelLayout.createSequentialGroup()
                .addGroup(downPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(downPanelLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(downPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(downPanelLayout.createSequentialGroup()
                                .addComponent(reportsCheckBox)
                                .addGap(59, 59, 59)
                                .addComponent(usersCheckBox))
                            .addGroup(downPanelLayout.createSequentialGroup()
                                .addComponent(warehouseCheckBox)
                                .addGap(63, 63, 63)
                                .addComponent(saleCheckBox))
                            .addGroup(downPanelLayout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(accessLabel))))
                    .addGroup(downPanelLayout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(addUserButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        downPanelLayout.setVerticalGroup(
            downPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(accessLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(downPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(warehouseCheckBox)
                    .addComponent(saleCheckBox))
                .addGap(8, 8, 8)
                .addGroup(downPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reportsCheckBox)
                    .addComponent(usersCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(downPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(topDownSeparator, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(topPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(topDownSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(downPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void usernameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTextFieldFocusLost
        validateUsername();
    }//GEN-LAST:event_usernameTextFieldFocusLost

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed

    }//GEN-LAST:event_addUserButtonActionPerformed

    private void passwordTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTextFieldFocusLost
        validatePassword();
        validateConfirmPassword();
    }//GEN-LAST:event_passwordTextFieldFocusLost

    private void confirmPasswordTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPasswordTextFieldFocusLost
        validateConfirmPassword();
    }//GEN-LAST:event_confirmPasswordTextFieldFocusLost

    private void firstNameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameTextFieldFocusLost
        validateFirstName();
    }//GEN-LAST:event_firstNameTextFieldFocusLost

    private void lastNameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameTextFieldFocusLost
        validateLastName();
    }//GEN-LAST:event_lastNameTextFieldFocusLost

    private void emailTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTextFieldFocusLost
        validateEmail();
    }//GEN-LAST:event_emailTextFieldFocusLost

    private void phoneNumberTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneNumberTextFieldFocusLost
        validatePhoneNumber();
    }//GEN-LAST:event_phoneNumberTextFieldFocusLost

    private void ageSpinnerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ageSpinnerFocusLost
        validateAge();
    }//GEN-LAST:event_ageSpinnerFocusLost

    private void addUserButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addUserButtonMouseClicked

        validateAll();

        boolean check = true;

        for (boolean c : correct) {
            check &= c;
        }

        if (check) {
            Employee e = new Employee(firstNameTextField.getText(), lastNameTextField.getText(), emailTextField.getText(), phoneNumberTextField.getText(), Integer.parseInt(ageSpinner.getValue().toString()));
            check &= EmployeeDAO.insertEmployee(e);

            String hash = "";
            try {
                hash = PasswordHash.createHash(passwordTextField.getPassword());
            } catch (NoSuchAlgorithmException | InvalidKeySpecException ex) {
                Logger.getLogger(NewUserPanel.class.getName()).log(Level.SEVERE, null, ex);
                check &= false;
            }
            User u = new User(usernameTextField.getText(), hash, e);
            check &= UserDAO.insertUser(u);

            List<Permission> list = new ArrayList<>();
            fillPermissionList(list);
            for (Permission p : list) {
                check &= EmployeePermissionDetailDAO.insertEmployeePermissionDetail(new EmployeePermissionDetail(e, p));
            }
        }
        String message = "Usuario creado correctamente.";
        if (check) {
            cleanFields();
            validateAll();
        } else {
            message = "Algunos datos están incompletos o hubo un error al crear el usuario.";
        }
        JOptionPane.showInternalMessageDialog(this, message);


    }//GEN-LAST:event_addUserButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accessLabel;
    private javax.swing.JButton addUserButton;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JSpinner ageSpinner;
    private javax.swing.JLabel checkAgeLabel;
    private javax.swing.JLabel checkConfirmPasswordLabel;
    private javax.swing.JLabel checkEmailLabel;
    private javax.swing.JLabel checkFirstNameLabel;
    private javax.swing.JLabel checkLastNameLabel;
    private javax.swing.JLabel checkPasswordLabel;
    private javax.swing.JLabel checkPhoneNumberLabel;
    private javax.swing.JLabel checkUsernameLabel;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JPasswordField confirmPasswordTextField;
    private javax.swing.JPanel downPanel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JLabel phoneNumberLabel;
    private javax.swing.JTextField phoneNumberTextField;
    private javax.swing.JCheckBox reportsCheckBox;
    private javax.swing.JCheckBox saleCheckBox;
    private javax.swing.JSeparator topDownSeparator;
    private javax.swing.JPanel topPanel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JCheckBox usersCheckBox;
    private javax.swing.JCheckBox warehouseCheckBox;
    // End of variables declaration//GEN-END:variables

    private void validateUsername() {
        String ans = Validation.validateUsername(usernameTextField.getText());
        if (ans.equals("Correcto")) {
            checkUsernameLabel.setIcon(new ImageLoader().COMPLETE_IMAGE);
            correct[0] = true;
        } else {
            checkUsernameLabel.setIcon(new ImageLoader().VOIDED_IMAGE);
            correct[0] = false;
        }
        checkUsernameLabel.setToolTipText(ans);
    }

    private void validatePassword() {
        String ans = Validation.validatePassword(String.valueOf(passwordTextField.getPassword()));
        if (ans.equals("Correcto")) {
            checkPasswordLabel.setIcon(new ImageLoader().COMPLETE_IMAGE);
            correct[1] = true;
        } else {
            checkPasswordLabel.setIcon(new ImageLoader().VOIDED_IMAGE);
            correct[1] = false;
        }
        checkPasswordLabel.setToolTipText(ans);
    }

    private void validateConfirmPassword() {
        String ans = Arrays.equals(passwordTextField.getPassword(), confirmPasswordTextField.getPassword()) ? "Correcto" : "Las contraseñas no son iguales.";
        if (ans.equals("Correcto")) {
            checkConfirmPasswordLabel.setIcon(new ImageLoader().COMPLETE_IMAGE);
            correct[2] = true;
        } else {
            checkConfirmPasswordLabel.setIcon(new ImageLoader().VOIDED_IMAGE);
            correct[2] = false;
        }
        checkConfirmPasswordLabel.setToolTipText(ans);
    }

    private void validateFirstName() {
        String ans = Validation.validateFirstName(firstNameTextField.getText());
        if (ans.equals("Correcto")) {
            checkFirstNameLabel.setIcon(new ImageLoader().COMPLETE_IMAGE);
            correct[3] = true;
        } else {
            checkFirstNameLabel.setIcon(new ImageLoader().VOIDED_IMAGE);
            correct[3] = false;
        }
        checkFirstNameLabel.setToolTipText(ans);
    }

    private void validateLastName() {
        String ans = Validation.validateLastName(lastNameTextField.getText());
        if (ans.equals("Correcto")) {
            checkLastNameLabel.setIcon(new ImageLoader().COMPLETE_IMAGE);
            correct[4] = true;
        } else {
            checkLastNameLabel.setIcon(new ImageLoader().VOIDED_IMAGE);
            correct[4] = false;
        }
        checkLastNameLabel.setToolTipText(ans);
    }

    private void validateEmail() {
        String ans = Validation.validateEmail(emailTextField.getText());
        if (ans.equals("Correcto")) {
            checkEmailLabel.setIcon(new ImageLoader().COMPLETE_IMAGE);
            correct[5] = true;
        } else {
            checkEmailLabel.setIcon(new ImageLoader().VOIDED_IMAGE);
            correct[5] = false;
        }
        checkEmailLabel.setToolTipText(ans);
    }

    private void validatePhoneNumber() {
        String ans = Validation.validatePhoneNumber(phoneNumberTextField.getText());
        if (ans.equals("Correcto")) {
            checkPhoneNumberLabel.setIcon(new ImageLoader().COMPLETE_IMAGE);
            correct[6] = true;
        } else {
            checkPhoneNumberLabel.setIcon(new ImageLoader().VOIDED_IMAGE);
            correct[6] = false;
        }
        checkPhoneNumberLabel.setToolTipText(ans);
    }

    private void validateAge() {
        String ans = Validation.validateAge(ageSpinner.getValue().toString());
        if (ans.equals("Correcto")) {
            checkAgeLabel.setIcon(new ImageLoader().COMPLETE_IMAGE);
            correct[7] = true;
        } else {
            checkAgeLabel.setIcon(new ImageLoader().VOIDED_IMAGE);
            correct[7] = false;
        }
        checkAgeLabel.setToolTipText(ans);
    }

    private void validateAll() {
        validateUsername();
        validatePassword();
        validateConfirmPassword();
        validateFirstName();
        validateLastName();
        validateEmail();
        validatePhoneNumber();
        validateAge();
    }

    private void fillPermissionList(List<Permission> list) {
        if (warehouseCheckBox.isSelected()) {
            list.add(new Permission(1));
        }
        if (reportsCheckBox.isSelected()) {
            list.add(new Permission(2));
        }
        if (saleCheckBox.isSelected()) {
            list.add(new Permission(3));
        }
        if (usersCheckBox.isSelected()) {
            list.add(new Permission(4));
        }
    }

    private void cleanFields() {
        usernameTextField.setText("");
        passwordTextField.setText("");
        confirmPasswordTextField.setText("");
        firstNameTextField.setText("");
        lastNameTextField.setText("");
        emailTextField.setText("");
        phoneNumberTextField.setText("");
        ageSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 150, 1));
        warehouseCheckBox.setSelected(false);
        reportsCheckBox.setSelected(false);
        saleCheckBox.setSelected(false);
        usersCheckBox.setSelected(false);
    }
}
